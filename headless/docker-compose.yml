services:
  resonite:
    build: .build
    container_name: resonite
    network_mode: host
    stdin_open: true
    tty: true
    volumes:
      # general data
      - ./data:/data:rw
      # have volume entires in dockerfile, if removed this data will persist
      # until the volume is removed
      - ./data/resonite:/data/resonite:rw
      - ./data/steamcmd:/data/steamcmd:rw

      # crystite data
      - ./data/config/crystite/:/etc/crystite:rw

    # mount scripts for runtime, 
      - .build/scripts:/scripts:ro
      - .build/crystite:/mnt/crystite:ro

    ## EDIT THESE ENVIRONMENT VARIABLES ##
    environment:
      # DO NOT REMOVE THIS VALUE
      RUN_AS: 1000
      # THIS CONTROLS THE USER ID THAT THE SERVER RUNS AS
      # This is specifically so *you* have control over the files]
      
      ## Options ## 
      ## These have their defualts set in the Dockerfile, and are safe to remove from this file
      
      # Prevents SteamCMD from updating the gamefiles
      DISABLE_STEAMCMD: "false"

      # Wether to use crystite or not.
      # if no STEAM_BETA key is provided, this is force set to true
      USE_CRYSTITE: "false"

      # Where to located the config file, defaults to /data/Config.json
      # if config file does not exist, it will generate a template one at that location
      CONFIG_FILE: "/data/Config.json"

      # overrides the command used to start the server, defaults to /scripts/99_start.sh
      COMMAND: "/scripts/99_start.sh"

      # Wether to enable the Resonite Mod Loader
      # Crystite Support is expiremental at best.
      RESONITE_MOD_LOADER: false
      # list of mods to load, seperated by commas
      MOD_URLS: ""

      # Does not allow the server to start, helpful for debugging the container as a whole
      STOP_LAUNCH: false

    env_file:
      # Intended location for steam credentials
      - ./steamcred.env
      #  STEAM_USER, STEAM_PASS, STEAM_AUTH, STEAM_BETA