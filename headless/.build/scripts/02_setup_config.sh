#!/bin/bash

## Setup Resonite Config
echo  "Setting up Resonite Config"

DEFAULT_RESONITE_ARGS="-LogsPath /data/resonite/logs -DataPath /data/resonite/data -CachePath /data/resonite/cache"
DEFAULT_RESONITE_ARGS="$DEFAULT_RESONITE_ARGS -HeadlessConfig $CONFIG_FILE"
if [ "$RESONITE_MOD_LOADER" == "true" ]; then
    DEFAULT_RESONITE_ARGS="$DEFAULT_RESONITE_ARGS -LoadAssembly Libraries/ResoniteModLoader.dll"
fi


RESONITE_CONFIG_SKIP=false
#if default config is not found, skip the rest of this script with the notice that this is a first run, 
if [ ! -f "/data/headless/Headless/Config/DefaultConfig.json" ]; then
    echo "NOTICE: DefaultConfig not found, skipping config setup"
    echo "This is a first run issue, relaunch the container to fix"
    RESONITE_CONFIG_SKIP=true
else
    # if CONFIG_FILE is not set, use default config path
    if  [ ! -f $CONFIG_FILE ]; then
        echo "No Resonite Config found, copying from template"
        cp /data/headless/Headless/Config/DefaultConfig.json $CONFIG_FILE
    fi
    CONFIG_FILE_DATA=$(cat $CONFIG_FILE)

    ## replace warning with safe to edit
    sed -i 's/"comment": "DO NOT EDIT THIS FILE! Your changes will be lost. Copy it over and create a new file called Config.json"/"comment": "This file is safe to edit. Your changes will be preserved."/g' $CONFIG_FILE
fi

## Setup Crystite Config
echo  "Setting up Crystite Config"
if  [ ! -f "/etc/crystite/appsettings.json" ]; then
    echo "No Crystite Config found, copying from template"
    cp /mnt/crystite/appsettings.json /etc/crystite/appsettings.json
else
    echo  "Crystite Config found, skipping copy"
fi



if [ ! $RESONITE_CONFIG_SKIP == true ]; then
## Generate Crystite Config from Resonite Config
    sed -i 's/"comment": "This file is safe to edit. Your changes will be preserved."/"comment": "This file is generated by the container and changes will not be preserved",/g' $CONFIG_FILE_DATA
    CRYSTITE_CONF=$(cat <<-EOF
{
    "Resonite": $CONFIG_FILE_DATA
}
EOF
)
    echo "$CRYSTITE_CONF" > /etc/crystite/conf.d/_generated_resonite.json
else
    cp /mnt/crystite/resonite.json /etc/crystite/conf.d/_generated_resonite.json

## Setup Modloader Configs
if [ "$RESONITE_MOD_LOADER" == "true" ]; then
    echo  "Setting up Modloader Configs"
    CRYSTITE_MOD_CONF=$(cat <<-EOF
{
    "Resonite": {
        "pluginAssemblies": [
            "/data/headless/Headless/Libraries/ResoniteModLoader.dll"
        ]
    }
}
EOF
)
    echo "$CRYSTITE_MOD_CONF" > /etc/crystite/conf.d/_generated_rml.json
fi